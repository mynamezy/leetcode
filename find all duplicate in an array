class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        map<int,int> num;
        vector<int> temp;
        for(auto t:nums){
            if(++num[t]>1) temp.push_back(t);
        }
        return temp;
    }
};
class Solution {
public:
vector<int> findDuplicates(vector<int>& nums) {
    vector<int> res;
    if(nums.empty()) return res;
    
    for(int i = 0; i < nums.size(); ++i){
        while(nums[nums[i] - 1] != nums[i]){
            swap(nums[nums[i] - 1], nums[i]);
        }
    }
    
    for(int i = 0; i < nums.size(); ++i){
        if(nums[i] != i + 1){
            res.push_back(nums[i]);
        }
    }
    return res;
    }
};
